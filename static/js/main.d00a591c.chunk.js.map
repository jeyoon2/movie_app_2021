{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","slice","map","genre","index","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qSAuCeA,MA9Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,SAAd,SACGD,EAAOI,MAAM,EAAG,GAAGC,KAAI,SAACC,EAAOC,GAAR,OACtB,oBAAgBN,UAAU,gBAA1B,SACGK,GADMC,QAMb,oBAAGN,UAAU,iBAAb,UAA+BH,EAAQM,MAAM,EAAG,KAAhD,gBCgCOI,E,4MAjDbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAEVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,4DANQ,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAKZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IARzB,2C,uDAYZ,WACEQ,KAAKN,c,oBAIP,WAAU,IAAD,EACuBM,KAAKT,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,kCACGD,EACC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGU,EAAON,KAAI,SAACc,GAAD,OACV,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACVxB,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAME,mBACdrB,OAAQmB,EAAMnB,QANTmB,EAAMC,e,GAlCTE,IAAMC,WCFxBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,a","file":"static/js/main.d00a591c.chunk.js","sourcesContent":["//영화를 render해보자\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./App.css\";\nimport \"./Movie.css\";\n\n// 이경우에는 movies component는 state를 필요로 하지 않아.\n// 그러니까 class component가 될 필요가 없지.\n\nfunction Movie({ year, title, summary, poster, genres }) {\n  return (\n    <div className=\"movie\">\n      <img src={poster} alt={title} title={title} />\n      <div className=\"movie__data\">\n        <h3 className=\"movie__title\">{title}</h3>\n        <h5 className=\"movie__year\">{year}</h5>\n        <ul className=\"genres\">\n          {genres.slice(0, 2).map((genre, index) => (\n            <li key={index} className=\"genres__genre\">\n              {genre}\n            </li>\n          ))}\n          {/* map에 있는 각각의 item은 key가 필요 */}\n        </ul>\n        <p className=\"movie__summary\">{summary.slice(0, 140)}...</p>\n      </div>\n    </div>\n  );\n}\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\nimport \"./Movie.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n  };\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\n    ); // rating에 따라 정렬\n    this.setState({ movies, isLoading: false });\n    // 받아온 movies를 state에 넘겨줌\n    // this.setState({ movies: movies }); 앞에거는 setState의 movies, 뒤에거는 axios에서 온 movie. es6 => 위에걸로 줄여쓸 수 있다. ?? 왜징\n  };\n  componentDidMount() {\n    this.getMovies();\n  }\n  // componentDidMount에서 Data를 fetch 해야함!\n  // 그리고 API로부터 data fetching이 완료되면 \"We are ready\" 대신에 movie를 render하고 map을 만들고 movie를 render\n  render() {\n    const { isLoading, movies } = this.state; // javascript 문법. state로부터 가져옴\n    return (\n      <section>\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.map((movie) => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"potato\"));\n\n// <App /> 이건 컴포넌트라는 것이다.\n// 컴포넌트는 html을 반환하는 함수이다. --> App.js\n// react는 컴포넌트를 사용해서 html처럼 작성하려는 경우에 필요하다.\n// javascript와 html의 이러한 조합을 jsx라고 부른다. jsx는 리액트에 특화된 개념\n\n// React application은 하나의 component만을 rendering할 수 있다!!\n// 따라서 모든 컴포넌트들은 App.js 안에 들어있어야 한다\n"],"sourceRoot":""}